# vi: set et ts=2 sw=2 :
name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:
    strategy:
      matrix:
        os: [ windows-2022 ]
    runs-on: ${{ matrix.os }}

    steps:
    #-------------- 1. 环境准备 -----------------
    - name: Install Cygwin & toolchain
      run: |-
        choco install cygwin -y
        choco install cyg-get -y
        cyg-get gcc-g++ `
                make automake autoconf m4 libtool `
                libncurses-devel libreadline-devel libssl-devel `
                dos2unix wget
        echo "C:/tools/cygwin/bin"       | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:/tools/cygwin/usr/bin"   | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v2

    - name: Convert line endings
      run: dos2unix bootstrap configure.ac csv-revision

    #-------------- 2. 构建与测试 ----------------
    - name: bootstrap
      run: bash -c "./bootstrap"

    - name: configure
      run: bash -c "./configure"

    - name: make
      run: make

    - name: make check
      run: make check

    - name: make distcheck
      run: make distcheck

    #-------------- 3. 打包产物 ------------------
    - name: Gather release files
      shell: bash
      run: |
        set -e
        mkdir -p release

        shopt -s nullglob
        for f in *.tar.* *.zip; do cp "$f" release/; done
        if [[ -f src/myapp.exe ]]; then
          cp src/myapp.exe release/
        fi
        # (cd release && zip -r artifacts.zip .)

    #-------------- 4. 上传产物 -------------------
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: release/
        if-no-files-found: error  
